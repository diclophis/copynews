---
- hosts: all
  tasks:
    - name: install virtualbox system packages
      apt: pkg={{ item }} state=latest
      sudo: true
      with_items:
        - virtualbox-guest-utils
      when: inventory_hostname in groups['virtualbox']

    - name: bootstrap ansible packages with existing apt state
      sudo: true
      apt: pkg={{ item }} state=present
      with_items:
        - aptitude
        - apt-transport-https

    #- name: install sources.list
    #  sudo: true
    #  copy: src={{ ansible_distribution_release }}.sources.list dest=/etc/apt/sources.list

    - name: install docker GPG key
      sudo: true
      apt_key: state=present url="http://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x36A1D7869245C8950F966E92D8576A8BA88D21E9"

    - name: ensure the docker apt repository is added
      sudo: true
      apt_repository: state=present repo='deb https://get.docker.io/ubuntu docker main'

    - name: install inn2 inn.conf
      sudo: true
      copy: src=files/inn2/inn.conf dest=/etc/news/inn.conf

    - name: update and safe upgrade apt-get packages
      sudo: true
      apt: update_cache=true cache_valid_time=900 upgrade=safe

    - name: install main system packages
      apt: pkg={{ item }} state=present
      sudo: true
      with_items:
        - python-pycurl #NOTE: these python modules are for ansible
        - python-mysqldb
        - python-apt
        - python-pip
        - linux-image-generic
        - linux-headers-generic
        - console-setup
        - vim
        - debootstrap
        - lxc-docker
        - postfix
        - mailutils
        - inn2
        - rsyslog
        # - update-manager-core
        # - update-notifier-common
        # - build-essential
        # - git
        # - screen
        # - psmisc
        # - curl
        # - zip
        # - rsync
        # - wget
        # - openjdk-7-jre
        # - htop
        # - tree
        # - kbd
        # - xkb-data
        # - man-db
        # - libc-bin
        # - dnsutils
        # - pv
        # - libssl1.0.0
        # - openssl
        # - libssl-dev
        # - nodejs
        # - libpcap0.8
        # - tcpdump
        # - apache2-utils
        # - libapr1
        # - libaprutil1

    - name: remove un-needed packages
      apt: pkg={{ item }} state=absent
      sudo: true
      with_items:
        - libkms1
        - hicolor-icon-theme
        - sound-theme-freedesktop
        - libbonobo2-common
        - libbonobo2-0
        - libtdb1
        - libidl-common
        - libgnome2-common
        - libidl0
        - libvorbisfile3
        - liborbit2
        - gamin
        - libgamin0
        - python-gamin
        - chef
        - puppet
        - puppet-common

    - name: install dkill alias
      lineinfile: dest=~/.bashrc state=present line="alias dkill=\"sudo docker kill \$(sudo docker ps | grep -v CONTAINER | awk '{ print \$1 }')\""

    - name: install dwatch alias
      lineinfile: dest=~/.bashrc state=present line="alias dtop=\"watch -n 0.1 sudo docker top \$(sudo docker ps | grep -v CONTAINER | awk '{ print \$1 }')\""

    - name: install postfix master.cf
      sudo: true
      copy: src=files/postfix/master.cf dest=/etc/postfix/master.cf

    - name: clear docker init
      sudo: true
      shell: rm -Rf /etc/docker_init

    - name: install docker init
      sudo: true
      copy: src=files/docker_init/ dest=/etc/docker_init

    - name: ensure postfix is started
      sudo: true
      service: name=postfix state=stopped enabled=true

    - name: ensure inn2 is started
      sudo: true
      service: name=inn2 state=stopped enabled=true

    - name: bootstrap docker image
      sudo: true
      shell: "{{ item }}"
      ignore_errors: true
      with_items:
        - test -e /proc/sys/kernel/yama/protected_nonaccess_hardlinks && echo 0 > /proc/sys/kernel/yama/protected_nonaccess_hardlinks
        - rm -f /etc/init.d/ondemand
        - rm -f /etc/rc2.d/S99ondemand
        - rm -f /etc/rc4.d/S99ondemand
        - rm -f /etc/rc5.d/S99ondemand
        - rm -f /home/provision/.bash_history
        - rm -f /root/.bash_history
        - docker ps -a | cut -d' ' -f1 | grep -v CONTAIN | xargs -I{} docker rm -f {}
        - docker images | grep -v CREATED | awk '{ print $3 }' | xargs -I{} docker rmi -f {}
        - find /var/log -type f | xargs -i{} bash -c "echo | tee {}"
        - rm -f /home/provision/precise.tar
        - >
          tar --numeric-owner --exclude=/initrd.img
          --exclude=/initrd.img.old
          --exclude=/lost+found
          --exclude=/media
          --exclude=/mnt
          --exclude=/srv
          --exclude=/vmlinuz
          --exclude=/vmlinuz.old
          --exclude=/vagrant
          --exclude=/proc
          --exclude=/sys
          --exclude=/dev
          --exclude=/etc/init
          --exclude=/usr/src
          --exclude=/run
          --exclude=/var/run
          --exclude=/var/lib/docker
          --exclude=/boot
          -cf precise.tar /
        - cat precise.tar | docker import - precise
        - docker run --detach=true -p 4443:443 -p 8080:80 -p 4406:3306 -p 4407:3307 -p 2222:22 precise /sbin/init --confdir=/etc/docker_init --startup-event=filesystem
